version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: Whithin
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1000-7
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  csharp-server:
    build:
      context: ./Messenger/Messenger
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./Messenger/Messenger/Uploads:/app/Uploads
      - ./ssl:/app/ssl
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=Whithin;Username=postgres;Password=1000-7
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "40000-40100:40000-40100/udp"
      - "40000-40100:40000-40100/tcp"
    volumes:
      - ./ssl:/app/ssl
    environment:
      - NODE_ENV=production
      - LISTEN_IP=0.0.0.0
      - ANNOUNCED_IP=4931257-dv98943.twc1.net
      - MEDIASOUP_LISTEN_IP=0.0.0.0
      - MEDIASOUP_ANNOUNCED_IP=4931257-dv98943.twc1.net
      - HTTPS=true
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - client
      - server
      - csharp-server
    networks:
      - app-network
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - csharp-server
      - server
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  uploads_data:
  uploads_avatars:
  uploads_banners:
  uploads_server_avatar:
  uploads_server_banner: 

networks:
  app-network:
    driver: bridge